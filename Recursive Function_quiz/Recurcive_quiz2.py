'''
    list = [6,8,3,9,10,1,2,4,7,5]
    
    우선 리스트를 반으로 나누어야 합나디.
    g1 : [6,8,3,9,10]
    g2 : [1,2,4,7,5]
    
    두 그룹을 각각 정렬합니다.(여기서 재귀호출을 이용해야 합니다!)
    g1 : [3, 6, 8, 9, 10]
    g2 : [1, 2, 4, 5, 7]
    
    이제 두 그룹을 합쳐서 다시 한 그룹으로 만들겠습니다(병합)
    g1 의 0번 인덱스3과 g2의 0번 인덱스1을 비교하여 더 작은 1을 결과 리스트에 넣습니다.
    g1 : [3, 6, 8, 9, 10]
    g2 : [2, 4, 5, 7]
    result : [1]
    
    두 그룹의 첫번째 값들을 비교하여 작은 값을 빼내 결과 리스트에 넣는 과정을 반복합니다.
    이번에는 g2의 2가 빠져나오게 됩니다.
    g1 : [3, 6, 8, 9, 10]
    g2 : [2, 4, 5, 7]
    result : [1,2]
    
    이번엔 g1의 3이 뽑혀 정렬이 됩니다.
    g1 : [6, 8, 9, 10]
    g2 : [2, 4, 5, 7]
    result : [1,2,3]
    
    이과정을 반복하다 보면 한 그룹의 자료가 다 빠져 나가게 됩니다.
    g1 : [8, 9, 10]
    g2 : [ ]
    result : [1,2,3,4,5,6,7]
    
    g2엔 더이상 자료가 없으므로 더이상 비교할 필요 없이 g1의 자료값들을 
    전부 result 로 옮기면 정렬이 끝나게 됩니다.
    g1 : [ ]
    g2 : [ ]
    result : [1,2,3,4,5,6,7,8,9,10]
    
    결과
    [1,2,3,4,5,6,7,8,9,10]
    
    '''
    
def merge_sort(list):
    a = len(list)
    
    if a <= 1:
        return
     
    mid = a//2
    g1 = list[:mid]
    g2 = list[mid:]
    
    merge_sort(g1)
    merge_sort(g2)
    
    i,j,r= 0,0,0
    while i < len(g1) and j < len(g2):
        if g1[i] < g2[j]:
            list[r] = g1[i]
            i+= 1
            r+=1
        else:
            list[r] = g2[j]
            j+=1
            r+=1

    while i < len(g1):
        list[r] = g1[i]
        i+=1
        r+=1
    while j < len(g2):
        list[r] = g2[j]
        j+=1
        r+=1


list = [6,8,3,9,10,1,2,4,7,5]
merge_sort(list)
print(list)

